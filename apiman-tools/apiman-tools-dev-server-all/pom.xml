<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.overlord.apiman</groupId>
    <artifactId>apiman-tools</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>apiman-tools-dev-server-all</artifactId>
  <packaging>pom</packaging>
  <name>apiman-tools-dev-server-all</name>

  <dependencies>
    <!-- The EAP 6 version of APIMan -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-api-war-eap6</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-ui-war-eap6</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-rt-gateway-war-eap6</artifactId>
      <type>war</type>
    </dependency>

    <!-- The WildFly 8 version of APIMan -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-api-war-wildfly8</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-ui-war-wildfly8</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-rt-gateway-war-wildfly8</artifactId>
      <type>war</type>
    </dependency>

    <!-- The Jetty 8 version of APIMan -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-api-war-jetty8</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-dt-ui-war-jetty8</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-rt-gateway-war-jetty8</artifactId>
      <type>war</type>
    </dependency>
    
    <!-- The Dev Environment Seeder -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-tools-dev-seeder</artifactId>
      <type>war</type>
    </dependency>

    <!-- Some Basic Services for Testing -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>apiman-tools-dev-services</artifactId>
      <type>war</type>
    </dependency>
    
    <!-- Data Source Dependencies -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <!-- Run on EAP 6.3 - must have EAP 6.3 ZIP file locally at the root of apiman-tool-dev-server-all -->
    <!-- 
    <profile>
      <id>run-all-eap6</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.8.2</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>run-eap6</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <antversion property="antversion" />
                    <echo>Ant Version: ${antversion}</echo>
                    
                    <property name="appserver.id" value="eap6" />
                    <property name="apiman.tempdir" value="${project.build.directory}/_tmp" />
                    <property name="apiman.install.dir" value="${project.build.directory}" />
                    <property name="apiman.appserver.dir" location="${apiman.install.dir}/jboss-eap-6.3" />
                    <property name="apiman.eap.zip" location="${basedir}/jboss-eap-6.3.0.zip" />
                    <property name="apiman.apiman-dt-api-war-eap6.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-api-war-eap6.war.path}" />
                    <property name="apiman.apiman-dt-ui-war-eap6.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-ui-war-eap6.war.path}" />
                    <property name="apiman.apiman-tools-dev-seeder.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-seeder.war.path}" />
                    <property name="apiman.apiman-tools-dev-services.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-services.war.path}" />
                    <property name="apiman.apiman-rt-gateway-war-eap6.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-rt-gateway-war-eap6.war.path}" />
                    <property name="apiman.eap.home" location="${apiman.appserver.dir}" />
                    <property name="apiman.eap.webapps" location="${apiman.appserver.dir}/standalone/deployments" />
                    <property name="apiman.resources.dir" location="${basedir}/src/main/resources" />
                    
                    <echo></echo>
                    <echo>********************************************************************</echo>
                    <echo>APIMan DT:         ${apiman.apiman-dt-api-war-eap6.war}</echo>
                    <echo>APIMan DT UI:      ${apiman.apiman-dt-ui-war-eap6.war}</echo>
                    <echo>APIMan Gateway:    ${apiman.apiman-rt-gateway-war-eap6.war}</echo>
                    <echo>Dev Seeder:        ${apiman.apiman-tools-dev-seeder.war}</echo>
                    <echo>Dev Services:      ${apiman.apiman-tools-dev-services.war}</echo>
                    <echo>=======</echo>
                    <echo>EAP Home:          ${apiman.eap.home}</echo>
                    <echo>********************************************************************</echo>
                    <echo></echo>
                    
                    <mkdir dir="${apiman.tempdir}" />
                    
                    <unzip src="${apiman.eap.zip}" dest="${apiman.install.dir}" overwrite="false" />
                    
                    <property name="apiman.config.file" location="${apiman.eap.home}/standalone/configuration/apiman.properties" />
                    <propertyfile file="${apiman.config.file}" comment=" Configuration information for Overlord API Management">
                      <entry key="apiman-dt-ui.dt-api.authentication.type" value="authToken" />
                      <entry key="apiman-dt-ui.dt-api.authentication.token.generator" value="org.overlord.apiman.dt.ui.server.auth.AuthTokenGenerator" />
                      <entry key="apiman-dt-ui.gateway.base-url" value="http://localhost:8080/apiman-rt/gateway/" />
                      <entry key="apiman-dt-api.gateway.rest-endpoint" value="http://localhost:8080/apiman-rt" />
                      <entry key="apiman-dt-api.gateway.authentication.basic.user" value="admin" />
                      <entry key="apiman-dt-api.gateway.authentication.basic.password" value="admin123!" />

                      <entry key="apiman-rt.registry" value="org.overlord.apiman.rt.engine.impl.InMemoryRegistry" />
                      <entry key="apiman-rt.connector-factory" value="org.overlord.apiman.rt.gateway.servlet.connectors.HttpConnectorFactory" />
                      <entry key="apiman-rt.policy-factory" value="org.overlord.apiman.rt.engine.policy.PolicyFactoryImpl" />
                      <entry key="apiman-rt.components.ISharedStateComponent" value="org.overlord.apiman.rt.engine.impl.InMemorySharedStateComponent" />
                      <entry key="apiman-rt.components.IPolicyFailureFactoryComponent" value="org.overlord.apiman.rt.gateway.servlet.PolicyFailureFactoryComponent" />
                    </propertyfile>
                    <property name="apiman.uiheader.config.src" value="${apiman.resources.dir}/config/header" />
                    <property name="apiman.uiheader.config.dest" value="${apiman.eap.home}/standalone/configuration/overlord-apps" />
                    <mkdir dir="${apiman.uiheader.config.dest}" />
                    <copy todir="${apiman.uiheader.config.dest}">
                      <fileset dir="${apiman.uiheader.config.src}" />
                    </copy>
                    
                    <copy file="${apiman.resources.dir}/eap6/deployments/apiman-ds.xml" todir="${apiman.eap.webapps}" overwrite="true" />
                    <copy file="${apiman.resources.dir}/eap6/configuration/application-users.properties" todir="${apiman.eap.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.resources.dir}/eap6/configuration/application-roles.properties" todir="${apiman.eap.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.resources.dir}/eap6/configuration/standalone.xml" todir="${apiman.eap.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.apiman-dt-api-war-eap6.war}" tofile="${apiman.eap.webapps}/apiman-dt-api.war" overwrite="true" />
                    <copy file="${apiman.apiman-dt-ui-war-eap6.war}" tofile="${apiman.eap.webapps}/apiman-dt-ui.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-seeder.war}" tofile="${apiman.eap.webapps}/dev-seeder.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-services.war}" tofile="${apiman.eap.webapps}/services.war" overwrite="true" />
                    <copy file="${apiman.apiman-rt-gateway-war-eap6.war}" tofile="${apiman.eap.webapps}/apiman-rt.war" overwrite="true" />
                    
                    <property name="apiman.eap.gclog" location="${apiman.eap.home}/standalone/log/gc.log" />
                    <makeurl property="apiman.eap.logconfig.url" file="${apiman.eap.home}/standalone/configuration/logging.properties" />
                    <java jar="${apiman.eap.home}/jboss-modules.jar" fork="true" failonerror="true" dir="${apiman.eap.home}">
                      <sysproperty key="java.io.tmpdir" value="${apiman.tempdir}" />
                      <sysproperty key="java.net.preferIPv4Stack" value="true" />
                      <sysproperty key="jboss.modules.system.pkgs" value="org.jboss.byteman" />
                      <sysproperty key="java.awt.headless" value="true" />
                      <sysproperty key="jboss.modules.policy-permissions" value="true" />
                      <sysproperty key="org.jboss.boot.log.file" value="${apiman.eap.home}/standalone/log/server.log" />
                      <sysproperty key="logging.configuration" value="${apiman.eap.logconfig.url}" />
                      <sysproperty key="jboss.home.dir" value="${apiman.eap.home}" />
                      <sysproperty key="jboss.server.base.dir" value="${apiman.eap.home}/standalone" />

                      <jvmarg line="-D&quot;[Standalone]&quot; -server -XX:+UseCompressedOops -verbose:gc -Xloggc:&quot;${apiman.eap.gclog}&quot; -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M -XX:-TraceClassUnloading -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8787" />
                      <arg value="-mp" />
                      <arg value="${apiman.eap.home}/modules" />
                      <arg value="-jaxpmodule" />
                      <arg value="javax.xml.jaxp-provider" />
                      <arg value="org.jboss.as.standalone" />
                    </java>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
     -->
    
    <!-- Run on WildFly 8.1 -->
    <profile>
      <id>run-all-wildfly8</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.8.2</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>run-wildfly8</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <antversion property="antversion" />
                    <echo>Ant Version: ${antversion}</echo>
                    
                    <property name="appserver.id" value="wildfly8" />
                    <property name="apiman.wildfly.download.url" value="http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip" />
                    <property name="apiman.tempdir" value="${project.build.directory}/_tmp" />
                    <property name="apiman.install.dir" value="${project.build.directory}" />
                    <property name="apiman.appserver.dir" location="${apiman.install.dir}/wildfly-8.1.0.Final" />
                    <property name="apiman.wildfly.zip" location="${basedir}/wildfly-8.1.0.Final.zip" />
                    <property name="apiman.apiman-dt-api-war-wildfly8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-api-war-wildfly8.war.path}" />
                    <property name="apiman.apiman-dt-ui-war-wildfly8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-ui-war-wildfly8.war.path}" />
                    <property name="apiman.apiman-tools-dev-seeder.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-seeder.war.path}" />
                    <property name="apiman.apiman-tools-dev-services.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-services.war.path}" />
                    <property name="apiman.apiman-rt-gateway-war-wildfly8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-rt-gateway-war-wildfly8.war.path}" />
                    <property name="apiman.wildfly.home" location="${apiman.appserver.dir}" />
                    <property name="apiman.wildfly.webapps" location="${apiman.appserver.dir}/standalone/deployments" />
                    <property name="apiman.resources.dir" location="${basedir}/src/main/resources" />
                    
                    <echo></echo>
                    <echo>********************************************************************</echo>
                    <echo>APIMan DT:         ${apiman.apiman-dt-api-war-wildfly8.war}</echo>
                    <echo>APIMan DT UI:      ${apiman.apiman-dt-ui-war-wildfly8.war}</echo>
                    <echo>APIMan Gateway:    ${apiman.apiman-rt-gateway-war-wildfly8.war}</echo>
                    <echo>Dev Seeder:        ${apiman.apiman-tools-dev-seeder.war}</echo>
                    <echo>Dev Services:      ${apiman.apiman-tools-dev-services.war}</echo>
                    <echo>-------</echo>
                    <echo>EAP Home:          ${apiman.wildfly.home}</echo>
                    <echo>********************************************************************</echo>
                    <echo></echo>
                    
                    <mkdir dir="${apiman.tempdir}" />
                    
                    <!-- Download and unpack WildFly 8.1 -->
                    <get src="${apiman.wildfly.download.url}" dest="${apiman.wildfly.zip}" usetimestamp="true" />
                    <unzip src="${apiman.wildfly.zip}" dest="${apiman.install.dir}" overwrite="false" />
                    
                    <!-- Configure APIMan -->
                    <property name="apiman.config.file" location="${apiman.wildfly.home}/standalone/configuration/apiman.properties" />
                    <propertyfile file="${apiman.config.file}" comment=" Configuration information for Overlord API Management">
                      <entry key="apiman-dt-ui.dt-api.authentication.type" value="authToken" />
                      <entry key="apiman-dt-ui.dt-api.authentication.token.generator" value="org.overlord.apiman.dt.ui.server.auth.AuthTokenGenerator" />
                      <entry key="apiman-dt-ui.gateway.base-url" value="http://localhost:8080/apiman-rt/gateway/" />
                      <entry key="apiman-dt-api.gateway.rest-endpoint" value="http://localhost:8080/apiman-rt" />
                      <entry key="apiman-dt-api.gateway.authentication.basic.user" value="admin" />
                      <entry key="apiman-dt-api.gateway.authentication.basic.password" value="admin123!" />

                      <entry key="apiman-rt.registry" value="org.overlord.apiman.rt.engine.impl.InMemoryRegistry" />
                      <entry key="apiman-rt.connector-factory" value="org.overlord.apiman.rt.gateway.servlet.connectors.HttpConnectorFactory" />
                      <entry key="apiman-rt.policy-factory" value="org.overlord.apiman.rt.engine.policy.PolicyFactoryImpl" />
                      <entry key="apiman-rt.components.ISharedStateComponent" value="org.overlord.apiman.rt.engine.impl.InMemorySharedStateComponent" />
                      <entry key="apiman-rt.components.IRateLimiterComponent" value="org.overlord.apiman.rt.engine.impl.InMemoryRateLimiterComponent" />
                      <entry key="apiman-rt.components.IPolicyFailureFactoryComponent" value="org.overlord.apiman.rt.gateway.servlet.PolicyFailureFactoryComponent" />
                    </propertyfile>
                    <property name="apiman.uiheader.config.src" value="${apiman.resources.dir}/config/header" />
                    <property name="apiman.uiheader.config.dest" value="${apiman.wildfly.home}/standalone/configuration/overlord-apps" />
                    <mkdir dir="${apiman.uiheader.config.dest}" />
                    <copy todir="${apiman.uiheader.config.dest}">
                      <fileset dir="${apiman.uiheader.config.src}" />
                    </copy>
                    
                    <!-- Deploy apiman to WildFly 8 -->
                    <copy file="${apiman.resources.dir}/wildfly8/deployments/apiman-ds.xml" todir="${apiman.wildfly.webapps}" overwrite="true" />
                    <copy file="${apiman.resources.dir}/wildfly8/configuration/application-users.properties" todir="${apiman.wildfly.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.resources.dir}/wildfly8/configuration/application-roles.properties" todir="${apiman.wildfly.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.resources.dir}/wildfly8/configuration/standalone.xml" todir="${apiman.wildfly.home}/standalone/configuration" overwrite="true" />
                    <copy file="${apiman.apiman-dt-api-war-wildfly8.war}" tofile="${apiman.wildfly.webapps}/apiman-dt-api.war" overwrite="true" />
                    <copy file="${apiman.apiman-dt-ui-war-wildfly8.war}" tofile="${apiman.wildfly.webapps}/apiman-dt-ui.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-seeder.war}" tofile="${apiman.wildfly.webapps}/dev-seeder.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-services.war}" tofile="${apiman.wildfly.webapps}/services.war" overwrite="true" />
                    <copy file="${apiman.apiman-rt-gateway-war-wildfly8.war}" tofile="${apiman.wildfly.webapps}/apiman-rt.war" overwrite="true" />
                    
                    <!-- Start WildFly 8 -->
                    <makeurl property="apiman.wildfly.logconfig.url" file="${apiman.wildfly.home}/standalone/configuration/logging.properties" />
                    <java jar="${apiman.wildfly.home}/jboss-modules.jar" fork="true" failonerror="true" dir="${apiman.wildfly.home}">
                      <!-- Set WildFly startup system properties -->
                      <sysproperty key="java.io.tmpdir" value="${apiman.tempdir}" />
                      <sysproperty key="java.net.preferIPv4Stack" value="true" />
                      <sysproperty key="jboss.modules.system.pkgs" value="org.jboss.byteman" />
                      <sysproperty key="java.awt.headless" value="true" />
                      <sysproperty key="org.jboss.boot.log.file" value="${apiman.wildfly.home}/standalone/log/server.log" />
                      <sysproperty key="logging.configuration" value="${apiman.wildfly.logconfig.url}" />
                      <sysproperty key="jboss.home.dir" value="${apiman.wildfly.home}" />
                      <sysproperty key="jboss.server.base.dir" value="${apiman.wildfly.home}/standalone" />

                      <jvmarg line="-D&quot;[Standalone]&quot; -server -Xms256m -Xmx1024m -XX:MaxPermSize=256m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8787" />
                      <arg value="-mp" />
                      <arg value="${apiman.wildfly.home}/modules" />
                      <arg value="org.jboss.as.standalone" />
                    </java>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Run on Jetty 8 -->
    <!-- 
    <profile>
      <id>run-all-jetty8</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.8.2</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>run-jetty8</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <antversion property="antversion" />
                    <echo>Ant Version: ${antversion}</echo>
                    
                    <property name="appserver.id" value="jetty8" />
                    <property name="apiman.tempdir" value="${project.build.directory}/_tmp" />
                    <property name="apiman.install.dir" value="${project.build.directory}" />
                    <property name="apiman.appserver.dir" location="${apiman.install.dir}/jetty-distribution-8.1.14.v20131031" />
                    <property name="apiman.jetty.download.url" value="http://eclipse.org/downloads/download.php?file=/jetty/8.1.14.v20131031/dist/jetty-distribution-8.1.14.v20131031.zip&amp;r=1" />
                    <property name="apiman.jetty.zip" location="${basedir}/jetty-distribution-8.1.14.v20131031.zip" />
                    <property name="apiman.apiman-dt-api-war-jetty8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-api-war-jetty8.war.path}" />
                    <property name="apiman.apiman-dt-ui-war-jetty8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-dt-ui-war-jetty8.war.path}" />
                    <property name="apiman.apiman-tools-dev-seeder.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-seeder.war.path}" />
                    <property name="apiman.apiman-tools-dev-services.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-tools-dev-services.war.path}" />
                    <property name="apiman.commons-dbcp.jar"
                      value="${maven.dependency.commons-dbcp.commons-dbcp.jar.path}" />
                    <property name="apiman.commons-pool.jar"
                      value="${maven.dependency.commons-pool.commons-pool.jar.path}" />
                    <property name="apiman.h2.jar"
                      value="${maven.dependency.com.h2database.h2.jar.path}" />
                    <property name="apiman.apiman-rt-gateway-war-jetty8.war"
                      value="${maven.dependency.org.overlord.apiman.apiman-rt-gateway-war-jetty8.war.path}" />
                    <property name="apiman.jetty.home" location="${apiman.appserver.dir}" />
                    <property name="apiman.jetty.webapps" location="${apiman.appserver.dir}/webapps" />
                    <property name="apiman.jetty.logdir" location="${apiman.appserver.dir}/logs" />
                    <property name="apiman.resources.dir" location="${basedir}/src/main/resources" />
                    
                    <echo></echo>
                    <echo>********************************************************************</echo>
                    <echo>APIMan DT:         ${apiman.apiman-dt-api-war-jetty8.war}</echo>
                    <echo>APIMan DT UI:      ${apiman.apiman-dt-ui-war-jetty8.war}</echo>
                    <echo>APIMan Gateway:    ${apiman.apiman-rt-gateway-war-jetty8.war}</echo>
                    <echo>Dev Seeder:        ${apiman.apiman-tools-dev-seeder.war}</echo>
                    <echo>Dev Services:      ${apiman.apiman-tools-dev-services.war}</echo>
                    <echo>Commons Pooling:   ${apiman.commons-pool.jar}</echo>
                    <echo>Commons DBCP:      ${apiman.commons-dbcp.jar}</echo>
                    <echo>H2:                ${apiman.h2.jar}</echo>
                    <echo>========</echo>
                    <echo>Jetty Home:        ${apiman.jetty.home}</echo>
                    <echo>********************************************************************</echo>
                    <echo></echo>
                    
                    <mkdir dir="${apiman.tempdir}" />
                    <delete dir="${apiman.jetty.logdir}" />
                    <mkdir dir="${apiman.jetty.logdir}" />
                    
                    <get src="${apiman.jetty.download.url}" dest="${apiman.jetty.zip}" usetimestamp="true" />
                    <unzip src="${apiman.jetty.zip}" dest="${apiman.install.dir}" overwrite="false" />
                    <makeurl file="${apiman.jetty.home}" property="apiman.jetty.home.url" />
                    <echo>Jetty Home URL:    ${apiman.jetty.home.url}</echo>
                    
                    <copy file="${apiman.resources.dir}/jetty8/etc/jetty.xml" todir="${apiman.jetty.home}/etc" overwrite="true" />
                    <copy file="${apiman.resources.dir}/jetty8/etc/realm.properties" todir="${apiman.jetty.home}/etc" overwrite="true" />
                    <copy file="${apiman.resources.dir}/jetty8/etc/jetty-logging.xml" todir="${apiman.jetty.home}/etc" overwrite="true" />
                    <copy file="${apiman.commons-dbcp.jar}" todir="${apiman.jetty.home}/lib/ext" overwrite="true" />
                    <copy file="${apiman.commons-pool.jar}" todir="${apiman.jetty.home}/lib/ext" overwrite="true" />
                    <copy file="${apiman.h2.jar}" todir="${apiman.jetty.home}/lib/ext" overwrite="true" />
                    <copy file="${apiman.apiman-dt-api-war-jetty8.war}" tofile="${apiman.jetty.webapps}/apiman-dt-api.war" overwrite="true" />
                    <copy file="${apiman.apiman-dt-ui-war-jetty8.war}" tofile="${apiman.jetty.webapps}/apiman-dt-ui.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-seeder.war}" tofile="${apiman.jetty.webapps}/dev-seeder.war" overwrite="true" />
                    <copy file="${apiman.apiman-tools-dev-services.war}" tofile="${apiman.jetty.webapps}/services.war" overwrite="true" />
                    <copy file="${apiman.apiman-rt-gateway-war-jetty8.war}" tofile="${apiman.jetty.webapps}/apiman-rt.war" overwrite="true" />
                    
                    <java jar="${apiman.jetty.home}/start.jar" fork="true" failonerror="true" dir="${apiman.jetty.home}">
                      <sysproperty key="jetty.home" value="${apiman.jetty.home}" />
                      <sysproperty key="jetty.home.url" value="${apiman.jetty.home.url}" />
                      <sysproperty key="java.io.tmpdir" value="${apiman.tempdir}" />
                      <sysproperty key="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
                      <sysproperty key="hibernate.hbm2ddl.auto" value="create-drop" />
                      <sysproperty key="apiman-dt-ui.dt-api.authentication.type" value="authToken" />
                      <sysproperty key="apiman-dt-ui.dt-api.authentication.token.generator" value="org.overlord.apiman.dt.ui.server.auth.AuthTokenGenerator" />
                      <sysproperty key="apiman-dt-ui.gateway.base-url" value="http://localhost:8080/apiman-rt/gateway/" />
                      <sysproperty key="org.overlord.apps.config-dir" value="${apiman.resources.dir}/config/header" />

                      <sysproperty key="apiman-rt.registry" value="org.overlord.apiman.rt.engine.impl.InMemoryRegistry" />
                      <sysproperty key="apiman-rt.connector-factory" value="org.overlord.apiman.rt.gateway.servlet.connectors.HttpConnectorFactory" />
                      <sysproperty key="apiman-rt.policy-factory" value="org.overlord.apiman.rt.engine.policy.PolicyFactoryImpl" />
                      <sysproperty key="apiman-rt.components.ISharedStateComponent" value="org.overlord.apiman.rt.engine.impl.InMemorySharedStateComponent" />
                      <sysproperty key="apiman-rt.components.IPolicyFailureFactoryComponent" value="org.overlord.apiman.rt.gateway.servlet.PolicyFailureFactoryComponent" />

                      <sysproperty key="apiman-dt-api.gateway.rest-endpoint" value="http://localhost:8080/apiman-rt" />
                      <sysproperty key="apiman-dt-api.gateway.authentication.basic.user" value="admin" />
                      <sysproperty key="apiman-dt-api.gateway.authentication.basic.password" value="admin" />
                      <jvmarg line="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8787" />
                      <arg value="etc/jetty-logging.xml" />
                      <arg value="etc/jetty-started.xml" />
                    </java>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
     -->
  </profiles>
</project>